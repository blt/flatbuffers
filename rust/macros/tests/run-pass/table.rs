#![feature(plugin)]
#![plugin(flatbuffers_macros)]

extern crate flatbuffers_macros;
extern crate flatbuffers;

use flatbuffers::VectorType;

flatbuffers_object!{Table => Monster [
    field => { name = pos,
               typeOf = bool,
               slot = 4,
               comment = "test",
               default = true }
]}

fn main() {
    let buf =
        vec![72, 0, 0, 0, 77, 79, 78, 83, 0, 0, 0, 0, 60, 0, 128, 0, 8, 0, 0, 0, 6, 0, 52, 0, 0,
             0, 56, 0, 0, 0, 5, 0, 60, 0, 64, 0, 68, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 76, 0, 80,
             0, 96, 0, 104, 0, 84, 0, 88, 0, 112, 0, 120, 0, 92, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
             0, 1, 80, 0, 0, 0, 128, 63, 0, 0, 0, 64, 0, 0, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             8, 64, 2, 0, 5, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 0, 0, 0, 228,
             0, 0, 0, 204, 0, 0, 0, 128, 0, 0, 0, 88, 0, 0, 0, 64, 0, 0, 0, 65, 201, 121, 221, 65,
             201, 121, 221, 113, 164, 129, 142, 113, 164, 129, 142, 36, 0, 0, 0, 129, 145, 123,
             242, 205, 128, 15, 110, 129, 145, 123, 242, 205, 128, 15, 110, 241, 221, 103, 199,
             220, 72, 249, 67, 241, 221, 103, 199, 220, 72, 249, 67, 3, 0, 0, 0, 1, 0, 1, 0, 188,
             255, 255, 255, 4, 0, 0, 0, 4, 0, 0, 0, 70, 114, 101, 100, 0, 0, 0, 0, 2, 0, 0, 0, 20,
             0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 116, 101, 115, 116, 50, 0, 0, 0, 5, 0, 0, 0, 116,
             101, 115, 116, 49, 0, 0, 0, 2, 0, 0, 0, 10, 0, 20, 0, 30, 0, 40, 0, 60, 0, 8, 0, 0,
             0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60,
             0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 70, 114, 101, 100, 0, 0, 0, 0, 5, 0, 0, 0, 0, 1, 2,
             3, 4, 0, 0, 0, 9, 0, 0, 0, 77, 121, 77, 111, 110, 115, 116, 101, 114, 0, 0, 0];
    let table = flatbuffers::Table::get_root(buf, 0);
    let mon: Monster<_> = table.into();
}
